%!PS-Adobe-3.0 EPSF-3.0
%%Creator: MATLAB, The Mathworks, Inc.
%%Title: D:\MyCode\cloudsim-3.0\output\Simple.eps
%%CreationDate: 09/19/2012  20:26:30
%%DocumentNeededFonts: Helvetica
%%DocumentProcessColors: Cyan Magenta Yellow Black
%%LanguageLevel: 2
%%Pages: 1
%%BoundingBox:  -287   137   899   654
%%EndComments

%%BeginProlog
% MathWorks dictionary
/MathWorks 160 dict begin
% definition operators
/bdef {bind def} bind def
/ldef {load def} bind def
/xdef {exch def} bdef
/xstore {exch store} bdef
% operator abbreviations
/c  /clip ldef
/cc /concat ldef
/cp /closepath ldef
/gr /grestore ldef
/gs /gsave ldef
/mt /moveto ldef
/np /newpath ldef
/cm /currentmatrix ldef
/sm /setmatrix ldef
/rm /rmoveto ldef
/rl /rlineto ldef
/s {show newpath} bdef
/sc {setcmykcolor} bdef
/sr /setrgbcolor ldef
/sg /setgray ldef
/w /setlinewidth ldef
/j /setlinejoin ldef
/cap /setlinecap ldef
/rc {rectclip} bdef
/rf {rectfill} bdef
% page state control
/pgsv () def
/bpage {/pgsv save def} bdef
/epage {pgsv restore} bdef
/bplot /gsave ldef
/eplot {stroke grestore} bdef
% orientation switch
/portraitMode 0 def /landscapeMode 1 def /rotateMode 2 def
% coordinate system mappings
/dpi2point 0 def
% font control
/FontSize 0 def
/FMS {/FontSize xstore findfont [FontSize 0 0 FontSize neg 0 0]
  makefont setfont} bdef
/ISOLatin1Encoding where {pop /WindowsLatin1Encoding 256 array bdef
ISOLatin1Encoding WindowsLatin1Encoding copy pop
/.notdef/.notdef/quotesinglbase/florin/quotedblbase/ellipsis/dagger
/daggerdbl/circumflex/perthousand/Scaron/guilsinglleft/OE/.notdef/.notdef
/.notdef/.notdef/quoteleft/quoteright/quotedblleft/quotedblright/bullet
/endash/emdash/tilde/trademark/scaron/guilsinglright/oe/.notdef/.notdef
/Ydieresis WindowsLatin1Encoding 128 32 getinterval astore pop}
{/WindowsLatin1Encoding StandardEncoding bdef} ifelse
/reencode {exch dup where {pop load} {pop StandardEncoding} ifelse
  exch dup 3 1 roll findfont dup length dict begin
  { 1 index /FID ne {def}{pop pop} ifelse } forall
  /Encoding exch def currentdict end definefont pop} bdef
/isroman {findfont /CharStrings get /Agrave known} bdef
/FMSR {3 1 roll 1 index dup isroman {reencode} {pop pop} ifelse
  exch FMS} bdef
/csm {1 dpi2point div -1 dpi2point div scale neg translate
 dup landscapeMode eq {pop -90 rotate}
  {rotateMode eq {90 rotate} if} ifelse} bdef
% line types: solid, dotted, dashed, dotdash
/SO { [] 0 setdash } bdef
/DO { [.5 dpi2point mul 4 dpi2point mul] 0 setdash } bdef
/DA { [6 dpi2point mul] 0 setdash } bdef
/DD { [.5 dpi2point mul 4 dpi2point mul 6 dpi2point mul 4
  dpi2point mul] 0 setdash } bdef
% macros for lines and objects
/L {lineto stroke} bdef
/MP {3 1 roll moveto 1 sub {rlineto} repeat} bdef
/AP {{rlineto} repeat} bdef
/PDlw -1 def
/W {/PDlw currentlinewidth def setlinewidth} def
/PP {closepath eofill} bdef
/DP {closepath stroke} bdef
/MR {4 -2 roll moveto dup  0 exch rlineto exch 0 rlineto
  neg 0 exch rlineto closepath} bdef
/FR {MR stroke} bdef
/PR {MR fill} bdef
/L1i {{currentfile picstr readhexstring pop} image} bdef
/tMatrix matrix def
/MakeOval {newpath tMatrix currentmatrix pop translate scale
0 0 1 0 360 arc tMatrix setmatrix} bdef
/FO {MakeOval stroke} bdef
/PO {MakeOval fill} bdef
/PD {currentlinewidth 2 div 0 360 arc fill
   PDlw -1 eq not {PDlw w /PDlw -1 def} if} def
/FA {newpath tMatrix currentmatrix pop translate scale
  0 0 1 5 -2 roll arc tMatrix setmatrix stroke} bdef
/PA {newpath tMatrix currentmatrix pop	translate 0 0 moveto scale
  0 0 1 5 -2 roll arc closepath tMatrix setmatrix fill} bdef
/FAn {newpath tMatrix currentmatrix pop translate scale
  0 0 1 5 -2 roll arcn tMatrix setmatrix stroke} bdef
/PAn {newpath tMatrix currentmatrix pop translate 0 0 moveto scale
  0 0 1 5 -2 roll arcn closepath tMatrix setmatrix fill} bdef
/vradius 0 def /hradius 0 def /lry 0 def
/lrx 0 def /uly 0 def /ulx 0 def /rad 0 def
/MRR {/vradius xdef /hradius xdef /lry xdef /lrx xdef /uly xdef
  /ulx xdef newpath tMatrix currentmatrix pop ulx hradius add uly
  vradius add translate hradius vradius scale 0 0 1 180 270 arc 
  tMatrix setmatrix lrx hradius sub uly vradius add translate
  hradius vradius scale 0 0 1 270 360 arc tMatrix setmatrix
  lrx hradius sub lry vradius sub translate hradius vradius scale
  0 0 1 0 90 arc tMatrix setmatrix ulx hradius add lry vradius sub
  translate hradius vradius scale 0 0 1 90 180 arc tMatrix setmatrix
  closepath} bdef
/FRR {MRR stroke } bdef
/PRR {MRR fill } bdef
/MlrRR {/lry xdef /lrx xdef /uly xdef /ulx xdef /rad lry uly sub 2 div def
  newpath tMatrix currentmatrix pop ulx rad add uly rad add translate
  rad rad scale 0 0 1 90 270 arc tMatrix setmatrix lrx rad sub lry rad
  sub translate rad rad scale 0 0 1 270 90 arc tMatrix setmatrix
  closepath} bdef
/FlrRR {MlrRR stroke } bdef
/PlrRR {MlrRR fill } bdef
/MtbRR {/lry xdef /lrx xdef /uly xdef /ulx xdef /rad lrx ulx sub 2 div def
  newpath tMatrix currentmatrix pop ulx rad add uly rad add translate
  rad rad scale 0 0 1 180 360 arc tMatrix setmatrix lrx rad sub lry rad
  sub translate rad rad scale 0 0 1 0 180 arc tMatrix setmatrix
  closepath} bdef
/FtbRR {MtbRR stroke } bdef
/PtbRR {MtbRR fill } bdef
/stri 6 array def /dtri 6 array def
/smat 6 array def /dmat 6 array def
/tmat1 6 array def /tmat2 6 array def /dif 3 array def
/asub {/ind2 exch def /ind1 exch def dup dup
  ind1 get exch ind2 get sub exch } bdef
/tri_to_matrix {
  2 0 asub 3 1 asub 4 0 asub 5 1 asub
  dup 0 get exch 1 get 7 -1 roll astore } bdef
/compute_transform {
  dmat dtri tri_to_matrix tmat1 invertmatrix 
  smat stri tri_to_matrix tmat2 concatmatrix } bdef
/ds {stri astore pop} bdef
/dt {dtri astore pop} bdef
/db {2 copy /cols xdef /rows xdef mul dup 3 mul string
  currentfile 
  3 index 0 eq {/ASCIIHexDecode filter}
  {/ASCII85Decode filter 3 index 2 eq {/RunLengthDecode filter} if }
  ifelse exch readstring pop
  dup 0 3 index getinterval /rbmap xdef
  dup 2 index dup getinterval /gbmap xdef
  1 index dup 2 mul exch getinterval /bbmap xdef pop pop}bdef
/it {gs np dtri aload pop moveto lineto lineto cp c
  cols rows 8 compute_transform 
  rbmap gbmap bbmap true 3 colorimage gr}bdef
/il {newpath moveto lineto stroke}bdef
currentdict end def
%%EndProlog

%%BeginSetup
MathWorks begin

0 cap

end
%%EndSetup

%%Page: 1 1
%%BeginPageSetup
%%PageBoundingBox:  -287   137   899   654
MathWorks begin
bpage
%%EndPageSetup

%%BeginObject: obj1
bplot

/dpi2point 12 def
portraitMode -3444 7848 csm

    0     0 14240  6204 rc
86 dict begin %Colortable dictionary
/c0 { 0.000000 0.000000 0.000000 sr} bdef
/c1 { 1.000000 1.000000 1.000000 sr} bdef
/c2 { 0.900000 0.000000 0.000000 sr} bdef
/c3 { 0.000000 0.820000 0.000000 sr} bdef
/c4 { 0.000000 0.000000 0.800000 sr} bdef
/c5 { 0.910000 0.820000 0.320000 sr} bdef
/c6 { 1.000000 0.260000 0.820000 sr} bdef
/c7 { 0.000000 0.820000 0.820000 sr} bdef
c0
1 j
1 sg
   0    0 14241 6205 rf
6 w
0 5057 11036 0 0 -5057 1851 5522 4 MP
PP
-11036 0 0 5057 11036 0 0 -5057 1851 5522 5 MP stroke
4 w
DO
0 sg
1851 5522 mt 1851  465 L
1851  465 mt 1851  465 L
2540 5522 mt 2540  465 L
2540  465 mt 2540  465 L
3230 5522 mt 3230  465 L
3230  465 mt 3230  465 L
3920 5522 mt 3920  465 L
3920  465 mt 3920  465 L
4610 5522 mt 4610  465 L
4610  465 mt 4610  465 L
5299 5522 mt 5299  465 L
5299  465 mt 5299  465 L
5989 5522 mt 5989  465 L
5989  465 mt 5989  465 L
6679 5522 mt 6679  465 L
6679  465 mt 6679  465 L
7369 5522 mt 7369  465 L
7369  465 mt 7369  465 L
8058 5522 mt 8058  465 L
8058  465 mt 8058  465 L
8748 5522 mt 8748  465 L
8748  465 mt 8748  465 L
9438 5522 mt 9438  465 L
9438  465 mt 9438  465 L
10128 5522 mt 10128  465 L
10128  465 mt 10128  465 L
10817 5522 mt 10817  465 L
10817  465 mt 10817  465 L
11507 5522 mt 11507  465 L
11507  465 mt 11507  465 L
12197 5522 mt 12197  465 L
12197  465 mt 12197  465 L
12887 5522 mt 12887  465 L
12887  465 mt 12887  465 L
1851 5522 mt 12887 5522 L
12887 5522 mt 12887 5522 L
1851 5160 mt 12887 5160 L
12887 5160 mt 12887 5160 L
1851 4799 mt 12887 4799 L
12887 4799 mt 12887 4799 L
1851 4438 mt 12887 4438 L
12887 4438 mt 12887 4438 L
1851 4077 mt 12887 4077 L
12887 4077 mt 12887 4077 L
1851 3715 mt 12887 3715 L
12887 3715 mt 12887 3715 L
1851 3354 mt 12887 3354 L
12887 3354 mt 12887 3354 L
1851 2993 mt 12887 2993 L
12887 2993 mt 12887 2993 L
1851 2632 mt 12887 2632 L
12887 2632 mt 12887 2632 L
1851 2271 mt 12887 2271 L
12887 2271 mt 12887 2271 L
1851 1909 mt 12887 1909 L
12887 1909 mt 12887 1909 L
1851 1548 mt 12887 1548 L
12887 1548 mt 12887 1548 L
1851 1187 mt 12887 1187 L
12887 1187 mt 12887 1187 L
1851  826 mt 12887  826 L
12887  826 mt 12887  826 L
1851  465 mt 12887  465 L
12887  465 mt 12887  465 L
SO
6 w
1851  465 mt 12887  465 L
1851 5522 mt 12887 5522 L
12887 5522 mt 12887  465 L
1851 5522 mt 1851  465 L
1851 5522 mt 12887 5522 L
1851 5522 mt 1851  465 L
1851 5522 mt 1851 5411 L
1851  465 mt 1851  575 L
%%IncludeResource: font Helvetica
/Helvetica /WindowsLatin1Encoding 240 FMSR

1718 5779 mt 
(48) s
2540 5522 mt 2540 5411 L
2540  465 mt 2540  575 L
2407 5779 mt 
(49) s
3230 5522 mt 3230 5411 L
3230  465 mt 3230  575 L
3097 5779 mt 
(50) s
3920 5522 mt 3920 5411 L
3920  465 mt 3920  575 L
3787 5779 mt 
(51) s
4610 5522 mt 4610 5411 L
4610  465 mt 4610  575 L
4477 5779 mt 
(52) s
5299 5522 mt 5299 5411 L
5299  465 mt 5299  575 L
5166 5779 mt 
(53) s
5989 5522 mt 5989 5411 L
5989  465 mt 5989  575 L
5856 5779 mt 
(54) s
6679 5522 mt 6679 5411 L
6679  465 mt 6679  575 L
6546 5779 mt 
(55) s
7369 5522 mt 7369 5411 L
7369  465 mt 7369  575 L
7236 5779 mt 
(56) s
8058 5522 mt 8058 5411 L
8058  465 mt 8058  575 L
7925 5779 mt 
(57) s
8748 5522 mt 8748 5411 L
8748  465 mt 8748  575 L
8615 5779 mt 
(58) s
9438 5522 mt 9438 5411 L
9438  465 mt 9438  575 L
9305 5779 mt 
(59) s
10128 5522 mt 10128 5411 L
10128  465 mt 10128  575 L
9995 5779 mt 
(60) s
10817 5522 mt 10817 5411 L
10817  465 mt 10817  575 L
10684 5779 mt 
(61) s
11507 5522 mt 11507 5411 L
11507  465 mt 11507  575 L
11374 5779 mt 
(62) s
12197 5522 mt 12197 5411 L
12197  465 mt 12197  575 L
12064 5779 mt 
(63) s
12887 5522 mt 12887 5411 L
12887  465 mt 12887  575 L
12754 5779 mt 
(64) s
1851 5522 mt 1961 5522 L
12887 5522 mt 12776 5522 L
1683 5611 mt 
(4) s
1851 5160 mt 1961 5160 L
12887 5160 mt 12776 5160 L
1683 5249 mt 
(5) s
1851 4799 mt 1961 4799 L
12887 4799 mt 12776 4799 L
1683 4888 mt 
(6) s
1851 4438 mt 1961 4438 L
12887 4438 mt 12776 4438 L
1683 4527 mt 
(7) s
1851 4077 mt 1961 4077 L
12887 4077 mt 12776 4077 L
1683 4166 mt 
(8) s
1851 3715 mt 1961 3715 L
12887 3715 mt 12776 3715 L
1683 3804 mt 
(9) s
1851 3354 mt 1961 3354 L
12887 3354 mt 12776 3354 L
1550 3443 mt 
(10) s
1851 2993 mt 1961 2993 L
12887 2993 mt 12776 2993 L
1550 3082 mt 
(11) s
1851 2632 mt 1961 2632 L
12887 2632 mt 12776 2632 L
1550 2721 mt 
(12) s
1851 2271 mt 1961 2271 L
12887 2271 mt 12776 2271 L
1550 2360 mt 
(13) s
1851 1909 mt 1961 1909 L
12887 1909 mt 12776 1909 L
1550 1998 mt 
(14) s
1851 1548 mt 1961 1548 L
12887 1548 mt 12776 1548 L
1550 1637 mt 
(15) s
1851 1187 mt 1961 1187 L
12887 1187 mt 12776 1187 L
1550 1276 mt 
(16) s
1851  826 mt 1961  826 L
12887  826 mt 12776  826 L
1550  915 mt 
(17) s
1851  465 mt 1961  465 L
12887  465 mt 12776  465 L
1550  554 mt 
(18) s
1851  465 mt 12887  465 L
1851 5522 mt 12887 5522 L
12887 5522 mt 12887  465 L
1851 5522 mt 1851  465 L
%%IncludeResource: font Helvetica
/Helvetica /WindowsLatin1Encoding 360 FMSR

5949 6099 mt 
(Budget Increment) s
1414 5088 mt  -90 rotate
(Optimal MED \(Time Units\)) s
90 rotate
gs 1851 465 11037 5058 rc
48 w
/c8 { 0.043137 0.517647 0.780392 sr} bdef
c8
690 0 690 0 690 0 689 0 0 484 690 0 690 0 690 0 
689 0 0 480 690 0 690 0 690 0 689 0 0 965 690 0 
690 0 0 480 690 0 0 1687 689 0 1851 909 22 MP stroke
6 w
gr

c8

end %%Color Dict

eplot
%%EndObject

epage
end

showpage

%%Trailer
%%EOF
